version: "3.8"

services:
  kafka:
    image: apache/kafka:latest
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/var/lib/kafka/data


# CREATE A TOPIC
# docker exec -it first-course-kafka-1 /opt/kafka/bin/kafka-topics.sh --bootstrap-server localhost:9092 --create --topic first-course

# CONNECT TO THE CONTAINER & SEND MESSAGES
# docker exec --workdir /opt/kafka/bin/ -it first-course-kafka-1 sh
# ./kafka-console-producer.sh --bootstrap-server localhost:9092 --topic first-course

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - kafka

  minio:
    image: "minio/minio:latest"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=password
    volumes:
      - "minio:/data/minio"
    command: 'minio server /data/minio --console-address ":9001"'
    healthcheck:
      test:
        - CMD
        - curl
        - "-f"
        - "http://localhost:9000/minio/health/live"
      retries: 3
      timeout: 5s
    depends_on:
      - kafka

  trino:
    image: trinodb/trino:latest
    ports:
      - "8080:8080"
    environment:
      - TRINO_ENVIRONMENT=production
      - TRINO_JVM_MAX_HEAP_SIZE=4GB
      - TRINO_JVM_OFF_HEAP_SIZE=4GB
      - TRINO_QUERY_MAX_MEMORY=1GB
      - TRINO_QUERY_MAX_MEMORY_PER_NODE=1GB
      - TRINO_QUERY_MAX_TOTAL_MEMORY=2GB
      - TRINO_DISCOVERY_URI=http://trino:8080
    depends_on:
      - kafka
    volumes:
      - trino_data:/var/lib/trino/data

volumes:
  kafka_volume:
  minio:
  kafka_data:
  trino_data:
